{
  "name": "@microsoft.azure/openapi-validator-rulesets",
  "entries": [
    {
      "version": "1.3.4",
      "tag": "@microsoft.azure/openapi-validator-rulesets_v1.3.4",
      "date": "Thu, 01 Feb 2024 23:08:29 GMT",
      "comments": {
        "patch": [
          {
            "comment": "Gracefully handle lack of section.value[\"x-ms-enum\"].name in UniqueXmsEnumName. Solves https://github.com/Azure/azure-openapi-validator/issues/654"
          }
        ]
      }
    },
    {
      "version": "1.3.3",
      "tag": "@microsoft.azure/openapi-validator-rulesets_v1.3.3",
      "date": "Tue, 30 Jan 2024 18:28:15 GMT",
      "comments": {
        "patch": [
          {
            "comment": "Fix a false positive in NoDuplicatePathsForScopeParameter where the rule would flag list and point GETs as the same path"
          },
          {
            "comment": "Add rpcGuidelineCode to linter rules in azARM rulesets"
          },
          {
            "comment": "Fix ResourceNameRestriction rule to exclude validation for system-defined parameters"
          },
          {
            "comment": "Update latestVersionOfCommonTypesMustBeUsed rule to check for latest version(V5) of all common types"
          },
          {
            "comment": "Upgrade version to 1.3.2"
          },
          {
            "comment": "Add RPC code to ProvisioningStateMustBeReadOnly and fix documentation"
          },
          {
            "comment": "Fix a false alarm with the ParameterNotUsingCommonTypes rule that resulted in errors being flagged even when common-types were being referenced correctly."
          },
          {
            "comment": "Fix an issue where PropertiesTypeObjectNoDefinition must verify the existence of the allOf property in the definition object."
          }
        ]
      }
    },
    {
      "version": "1.3.2",
      "tag": "@microsoft.azure/openapi-validator-rulesets_v1.3.2",
      "date": "Tue, 19 Dec 2023 21:25:29 GMT",
      "comments": {
        "patch": [
          {
            "comment": "Disable falsely flagging rules(RequestBodyMustExistForPutPatch, PatchPropertiesCorrespondToPutProperties, PropertiesTypeObjectNoDefinition) in PROD"
          },
          {
            "comment": "Fix RequestBodyMustExistForPutPatch rule to not check the body param name to be 'body'"
          },
          {
            "comment": "Fix null check for latestVersionOfCommonTypesMustBeUsed"
          },
          {
            "comment": "Fix trackedExtensionResourcesAreNotAllowed from flagging false positives"
          },
          {
            "comment": "Add linter rules to production pipeline and update version to 1.3.0"
          },
          {
            "comment": "Make XmsIdentifierValidation a warning as it isn't truly blocking and there could be valid cases when 'x-ms-identifier' isn't present in the array."
          },
          {
            "comment": "Modify the rule AllTrackedResourcesMustHaveDelete to flag an error even when a Put operation is not specified for Tracked resources"
          },
          {
            "comment": "Fix documentation and add tests for the AvoidNestedProperties rule"
          },
          {
            "comment": "Update UnsupportedPatchProperties rule to include a check for properties.provisioningState property. The change is to ensure that provisioningState property is not updatable via a patch operation."
          }
        ]
      }
    },
    {
      "version": "1.3.0",
      "tag": "@microsoft.azure/openapi-validator-rulesets_v1.3.0",
      "date": "Tue, 05 Dec 2023 20:03:59 GMT",
      "comments": {
        "patch": [
          {
            "comment": "Fix fatal error caused by undefined parameters in ParametersInPointGet rule"
          },
          {
            "comment": "Update get-collection-only-has-value-nextlink.md to get-collection-only-has-value-and-next-link.md in order to match the rule name getCollectionOnlyHasValueAndNextLink"
          },
          {
            "comment": "Update docs and output message for PathForNestedResource rule to include details about the exception for extension resources and file a suppression request"
          },
          {
            "comment": "Update RPC-GET-V1-01(GetResponseCodes) to allow GET with 202 response code if the GET represents the location header polling url. Update RPC-Post-V1-09(LroExtension) to exclude GET from x-ms-long-running-operation presence validation"
          },
          {
            "comment": "Implement TenantLevelAPIsNotAllowed rule to check the existence of tenant level paths for PUT operation and guide through the process to get an exception "
          },
          {
            "comment": "Fix resourceNameRestriction to handle missing operation parameters"
          },
          {
            "comment": "Fix an issue where PatchPropertiesCorrespondToPutProperties rule checks if the path has both PUT and PATCH calls."
          },
          {
            "comment": "Add ConsistentResponseSchemaForPut (RPC-Put-V1-29) rule. The response schema of the 200 and 201 status codes of Put operation must be the same."
          },
          {
            "comment": "Fix an issue with AvoidAdditionalProperties rule. This rule is checking the additionalProperties defined from common-types or other predefined references, when it shouldn't."
          },
          {
            "comment": "Fix an issue where propertiesTypeObjectNoDefinition rules needs to check additional properties."
          },
          {
            "comment": "Add XmsPageableForListCalls (RPC-Get-V1-13) rule which ensures that all LIST APIs must contain the ‘x-ms-pageable’ extension"
          },
          {
            "comment": "Modify ValidateSegmentsInNestedResourceListOperation rule name to MissingSegmentsInNestedResourceListOperation"
          }
        ]
      }
    },
    {
      "version": "1.2.2",
      "tag": "@microsoft.azure/openapi-validator-rulesets_v1.2.2",
      "date": "Wed, 04 Oct 2023 17:01:43 GMT",
      "comments": {
        "patch": [
          {
            "comment": "Add EvenSegmentedPathForPutOperation rule that flags paths with PUT operation defined that do not end in {resourceType}/{resourceName}"
          },
          {
            "comment": "Add test cases for path-for-resource-action rule"
          },
          {
            "comment": "Add trackedExtensionResourcesAreNotAllowed rule that flags tracked extension resources, as extension resources may only be proxy"
          },
          {
            "comment": "Exclude not fully qualified extension resource paths in TopLevelResourcesListBySubscription linter rule"
          },
          {
            "comment": "Update PatchPropertiesCorrespondsToPutProperties to run in staging only"
          },
          {
            "comment": "Delete RPC-POST-V1-02(SyncPostReturn) linter rule as it is covered by RPC-Async-V1-11(PostReturnCodes)"
          },
          {
            "comment": "Change OperationsApiTenantLevelOnly to error for the path level instead of the operation level (#577)"
          },
          {
            "comment": "Change ReservedResourceNamesAsEnum from an error to a warning and make it warn for the path level instead of the operation level (#575)"
          },
          {
            "comment": "Add RPC codes to some existing rules"
          },
          {
            "comment": "Change severity of PatchSkuProperty and PatchIdentityProperty to warning"
          },
          {
            "comment": "Add a new rule RequestBodyMustExistForPutPatch that checks for the existence of a request body for a put or a patch operation."
          },
          {
            "comment": "Add new rule MissingSegmentsInNestedResourceListOperation, this rules checks if the nested resource type's List operation includes all the parent segments in its api path."
          },
          {
            "comment": "Modify PathForTrackedResourceTypes, this rule will check the path must be under a subscription and resource group for tracked resource types only."
          },
          {
            "comment": "Disable rule PropertiesTypeObjectNoDefinition in production pipeline"
          },
          {
            "comment": "Add GetOperationMustNotBeLongRunning, this rule makes sure GET calls must not have LRO properties as GET calls are synchronous"
          },
          {
            "comment": "Removed LroPostReturn (RPC-Post-V1-03) rule and updated PostResponseCodes rule with logic to flag POST 202 responses that have schemas"
          },
          {
            "comment": "Add XmsLongRunningOperationProperty as new rule. This rules checks if any reponses headers have Location or Azure-AsyncOperation properties, then it must have x-ms-long-running-operation set to true."
          }
        ],
        "none": [
          {
            "comment": "Activate rules and update version to 1.2.0"
          }
        ],
        "dependency": [
          {
            "comment": "Updating dependency \"@microsoft.azure/openapi-validator-core\" from `~1.0.0` to `~1.0.2`"
          }
        ]
      }
    },
    {
      "version": "1.2.0",
      "tag": "@microsoft.azure/openapi-validator-rulesets_v1.2.0",
      "date": "Wed, 16 Aug 2023 22:39:14 GMT",
      "comments": {
        "patch": [
          {
            "comment": "Add support for rfc7231 datetime"
          },
          {
            "comment": "Add test for RPC-POST-V1-01"
          },
          {
            "comment": "test"
          },
          {
            "comment": "fix wrong changes from a merge conflict"
          },
          {
            "comment": "implement RPC-PATCH-V1-01"
          },
          {
            "comment": "Added rule to detect additionalProperties(RPC-Policy-V1-05)"
          },
          {
            "comment": "re-implement rule ImplementPrivateEndpointApis"
          },
          {
            "comment": "disable recent unverified rules (since 5/10/2023) from running in production"
          },
          {
            "comment": "Disable few rules known to be buggy: ResourceMustReferenceCommonTypes, LROPostFinalStateViaProperty, ProvisioningStateMustBeReadOnly"
          },
          {
            "comment": "Add test for ProvisioingStateMustBeReadOnly "
          },
          {
            "comment": "Fix leftover changes for 'rush build' and 'rush regen-ruleindex'"
          },
          {
            "comment": "implement rule to validate if provisioingState is readOnly"
          },
          {
            "comment": "implement rule to flag usage of obsolete versions of common-types"
          },
          {
            "comment": "Implement RPC-Async-V1-02"
          },
          {
            "comment": "implement rpc_patch_v1_06"
          },
          {
            "comment": "implement RPC-POST-V1-05"
          },
          {
            "comment": "implement RPC_delete_v1_01"
          },
          {
            "comment": "implement RPC-GET-V1-08"
          },
          {
            "comment": "impelement rpc-post-v1-09"
          },
          {
            "comment": "Implement RPC-PUT-V1-11"
          },
          {
            "comment": "Added rule to detect non-default error codes."
          },
          {
            "comment": "update PatchResponseCodes"
          },
          {
            "comment": "Implement PostResponseCodes(RPC-ASYNC-V1-11)"
          },
          {
            "comment": "Implement PutResponseCodes(RPC-Async-V1-01) "
          },
          {
            "comment": "Make RPC-Put-V1-25 as an Error for ARM"
          },
          {
            "comment": "Add rule to check that resource definitions are using the common types references for ProxyResource or TrackedResource"
          },
          {
            "comment": "Revert PR 494"
          },
          {
            "comment": "merging linter rules DeleteOperationAsyncResponseValidation and delete-response-codes and removing the checks from long-running-response-status-code as they have conflicting implementations"
          },
          {
            "comment": "fixing documenation and error message for CreateOperationAsyncResponseValidation to be in sync with the implementation"
          },
          {
            "comment": "fixing PutRequestResponseSchemeArm for the case where a model has a property that is empty"
          },
          {
            "comment": "fixing rush build inconsistency"
          },
          {
            "comment": "fix verifyArmPath to account for third party RP namespaces"
          },
          {
            "comment": "removing all code related to ProvisioningStateSpecifiedForLRODelete"
          },
          {
            "comment": "removing dead code for ResourceMustReferenceCommonTypes and LROPostFinalStateViaProperty"
          },
          {
            "comment": "Modified category from warning to error for linter rules LroExtension, LroStatusCodesReturnTypeSchema, DescriptiveDescriptionRequired, ParameterDescriptionRequired"
          },
          {
            "comment": "fixing rpc_patch_v1_02"
          },
          {
            "comment": "fixing generated files due to missed prior rush build"
          },
          {
            "comment": "Added linter rule for RPC-Common-V1-05 and updated documentation for parameter common types rule."
          },
          {
            "comment": "Add rule that checks for service-defined resource names and ensures they are represented as an enum type with modelAsString set to true, not as a static string in the path"
          },
          {
            "comment": "Added linter rule for RPC-Get-V1-09 that ensures collection GET endpoints have properties `value` and `nextLink`, and no other properties."
          },
          {
            "comment": "Add a linter rule for RPC-Operations-V1-01 and RPC-Operations-V1-02 to check for operations API at levels other than tenant level (e.g., subscription level)."
          },
          {
            "comment": "Added a linter rule for using the common types operations API response."
          },
          {
            "comment": "implement RPC-POST-V1-02 and RPC-POST-V1-03 rules\""
          },
          {
            "comment": "Add rt1/rt2/{resourceName} to invalid patterns for RPC-URI-V1-06/RPC-Put-V1-02"
          },
          {
            "comment": "Adding ARM RPC rule RPC-Put-V1-07"
          },
          {
            "comment": "implement rpc-v1-11"
          },
          {
            "comment": "Add linter rule for RPC-SystemData-V1-01"
          },
          {
            "comment": "Add linter rule for RPC-Uri-V1-10 to detect path duplication when using the scope parameter."
          },
          {
            "comment": "update APIVersionPattern & ValidFormat"
          },
          {
            "comment": "bugfix for 4 rules"
          },
          {
            "comment": "refactor internal names"
          },
          {
            "comment": "Added rule to detect additionalProperties(RPC-Policy-V1-05)"
          },
          {
            "comment": "Added rule to detect PropertiesTypeObjectNoDefinition (RPC-Policy-V1-03)"
          },
          {
            "comment": "Deleted files and context related to rule RPC-Put-V1-11"
          },
          {
            "comment": "Updated linter rule for RPC-Get-V1-09 that ensures collection GET endpoints have properties `value` and `nextLink`, and no other properties."
          },
          {
            "comment": "Removed the check which is not required as the part of \"CreateOperationAsyncResponseValidation\" amd removed the RPC-Async-V1-06 rule"
          },
          {
            "comment": "updated existing rule to address FPS RPC-Policy-V1-03"
          }
        ],
        "minor": [
          {
            "comment": "Added rule to check that parameters already defined in common-types are not being redefined."
          },
          {
            "comment": "Remove RequiredReadOnlyProperties rule"
          },
          {
            "comment": "Update to 1.1.0"
          }
        ],
        "dependency": [
          {
            "comment": "Updating dependency \"@microsoft.azure/openapi-validator-core\" from `~1.0.0` to `~1.0.2`"
          }
        ]
      }
    },
    {
      "version": "1.0.1",
      "tag": "@microsoft.azure/openapi-validator-rulesets_v1.0.1",
      "date": "Thu, 24 Nov 2022 04:00:42 GMT",
      "comments": {
        "patch": [
          {
            "comment": "fix rule DefinitionsPropertiesNamesCamelCase & validFormats"
          }
        ]
      }
    }
  ]
}
