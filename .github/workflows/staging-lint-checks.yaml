name: Staging Lint Checks

on:
  pull_request:
    types: [opened, edited, synchronize, labeled, unlabeled]

env:
  SPEC_REPO: Azure/azure-rest-api-specs
  SPEC_CHECKOUT_PATH: specs
  FAIL_ON_ERRORS: "false" # Set to "true" to fail the job when error findings appear
  MAX_FILES: "100"
  ALLOWED_RPS: "network,compute,monitor,sql,hdinsight,resource,storage"

jobs:
  run-selected-rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout validator repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          
      - name: Checkout specs repository (sparse - only needed RPs)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SPEC_REPO }}
          path: ${{ env.SPEC_CHECKOUT_PATH }}
          sparse-checkout: |
            specification/network
            specification/compute
            specification/monitor
            specification/sql
            specification/hdinsight
            specification/resource
            specification/storage
          sparse-checkout-cone-mode: false

      - name: Install Rush & dependencies
        run: |
          node common/scripts/install-run-rush.js install

      - name: Build validator (local changes)
        run: |
          node common/scripts/install-run-rush.js build -t @microsoft.azure/openapi-validator

      - name: Extract rules and run AutoRest validation
        uses: actions/github-script@v7
        with:
          script: |
            // Dynamically import the workflow helper script from the repository using an absolute path.
            // Relative specifiers here are resolved against the github-script action's dist folder, not the repo root,
            // which caused the earlier ERR_MODULE_NOT_FOUND. We build an absolute path from GITHUB_WORKSPACE instead.
            const { join } = await import('node:path');
            const { pathToFileURL } = await import('node:url');
            const scriptPath = join(process.env.GITHUB_WORKSPACE, '.github', 'workflows', 'src', 'extract-rule-names-and-run-validation.js');
            console.log(`DEBUG | importing validation script from: ${scriptPath}`);
            try {
              const mod = await import(pathToFileURL(scriptPath).href);
              if (!mod.runInGitHubActions) {
                core.setFailed('runInGitHubActions export not found in validation script');
              } else {
                await mod.runInGitHubActions(context, core, process.env);
              }
            } catch (e) {
              core.setFailed(`Failed to import validation script: ${e?.message || e}`);
              throw e;
            }

      - name: Upload findings artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linter-findings
          path: artifacts/linter-findings.txt
          if-no-files-found: warn
